select count(*) from singer _EX _EM
select count(*) from singer _EX _EM
select name, country, age from singer order by age desc _EX _EM
select name, country, age from singer order by age desc _EX _EM
select avg(age), min(age), max(age) from singer where country = "France" _EX _EM
select avg(age), min(age), max(age) from singer where country = "France" _EX _EM
select song_name, song_release_year from singer order by age asc limit 1 _EX _EM
select song_name, song_release_year from singer order by age asc limit 1 _EX _EM
select distinct country from singer where age > 20 _EX _EM
select distinct country from singer where age > 20 _EX _EM
select country, count(*) from singer group by country _EX _EM
select country, count(*) from singer group by country _EX _EM
select song_name from singer where age > (select avg(age) from singer) _EX _EM
select song_name from singer where age > (select avg(age) from singer) _EX _EM
select location, name from stadium where capacity between 5000 and 10000 _EX _EM
select location, name from stadium where capacity between 5000 and 10000 _EX _EM
select max(capacity), avg(capacity) from stadium
select avg(capacity), max(capacity) from stadium _EX _EM
select name, capacity from stadium group by stadium_id order by avg(average) desc limit 1 _EX
select name, capacity from stadium group by stadium_id order by avg(average) desc limit 1 _EX
select count(*) from concert where year = 2014 or year = 2015 _EX _EM
select count(*) from concert where year = 2014 or year = 2015 _EX _EM
select t1.name, count(*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id _EM
select t1.stadium_id, count(*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id
select t1.name, t1.capacity from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year >= 2014 group by t2.stadium_id order by count(*) desc limit 1 _EX _EM
select t1.name, t1.capacity from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year > 2013 group by t2.stadium_id order by count(*) desc limit 1 _EX _EM
select year from concert group by year order by count(*) desc limit 1 _EX _EM
select year from concert group by year order by count(*) desc limit 1 _EX _EM
select name from stadium where stadium_id not in (select stadium_id from concert) _EX _EM
select name from stadium where stadium_id not in (select stadium_id from concert) _EX _EM
select country from singer where age > 40 intersect select country from singer where age < 30 _EX _EM
select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 _EX _EM
select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 _EX _EM
select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t1.concert_id _EX _EM
select t1.concert_name, t1.theme, count(*) from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id _EX _EM
select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t1.singer_id _EX _EM
select t2.name, count(*) from concert as t1 join singer as t2 on t1.singer_
select t3.name from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id join singer as t3 on t2.singer_id = t3.singer_id where t1.year = 2014 _EX _EM
select t3.name from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id join singer as t3 on t2.singer_id = t3.singer_id where t1.year = 2014 _EX _EM
select name, country from singer where song_name like "%hey%" _EX _EM
select name, country from singer where song_name like "%hey%" _EX _EM
select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015 _EX _EM
select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015 _EX _EM
select count(*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id order by t1.capacity desc limit 1
select count(*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t1.capacity = (select max(capacity) from stadium) _EX
select count(*) from pets where weight > 10 _EX _EM
select count(*) from pets where weight > 10 _EX _EM
select weight from pets where pettype = "dog" and age = (select min(age) from pets
select weight from pets where pettype = "dog" and age = (select min(age) from pets
select max(weight), pettype from pets group by pettype _EX _EM
select max(weight), pettype from pets group by pettype _EX _EM
select count(distinct t2.petid) from has_pet as t1 join pets as t2 on t1.petid = t2.petid join student as t3 on t1.stuid = t3.stuid where t3.age > 20
select count(distinct t2.petid) from has_pet as t1 join pets as t2 on t1.petid = t2.petid join student as t3 on t1.stuid = t3.stuid where t3.age > 20
select count(*) from pets as t1 join has_pet as t2 on t1.petid = t2.petid join student as t3 on t2.stuid = t3.stuid where t3.sex = "F"
select count(*) from pets as t1 join has_pet as t2 on t1.petid = t2.petid join student as t3 on t2.stuid = t3.stuid where t3.sex = "F"
select count(distinct pettype) from pets _EX _EM
select count(distinct pettype) from pets _EX _EM
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "cat" or t3.pettype = "dog" _EM
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "cat" or t3.pettype = "dog" _EM
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'dog' _EX _EM
select fname from student where stuid in (select t1.stuid from has_pet as t1 join pets as t2 on t1.petid = t2.petid where t2.pettype = "cat") intersect select fname from student where stuid in (select t1.stuid from has_pet as t1 join pets as t2 on t1.petid = t2.petid where t2.pettype = "dog") _EX
select major, age from student except select t1.major, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "cat"
select major, age from student where stuid not in (select t1.stuid from has_pet as t1 join pets as t2 on t1.petid = t2.petid where t2.pettype = "cat") _EX
select stuid from student except select stuid from has_pet where petid = t2.petid
select stuid from student except select stuid from has_pet where petid = (select petid from pets where pettype = "cat") _EX
select fname, age from student where stuid in (select t1.stuid from has_pet as t1 join pets as t2 on t1.petid = t2.petid where t2.pettype = "dog" except select t1.stuid from has_pet as t1 join pets as t2 on t1.petid = t2.petid where t2.pettype = "cat")
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "dog" except select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "cat"
select pettype, weight from pets order by pet_age asc limit 1 _EX _EM
select pettype, weight from pets order by pet_age asc limit 1 _EX _EM
select petid, weight from pets where pet_age > 1 _EX _EM
select petid, weight from pets where pet_age > 1 _EX _EM
select pettype, avg(pet_age), max(pet_age) from pets group by pettype _EX _EM
select pettype, avg(pet_age), max(pet_age) from pets group by pettype _EX _EM
select pettype, avg(weight) from pets group by pettype _EX _EM
select pettype, avg(weight) from pets group by pettype _EX _EM
select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid _EX _EM
select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid _EX _EM
select t2.petid from has_pet as t1 join pets as t2 on t1.petid = t2.petid join student as t3 on t1.stuid = t3.stuid where t3.lname = "Smith" _EX
select t2.petid from has_pet as t1 join pets as t2 on t1.petid = t2.petid join student as t3 on t1.stuid = t3.stuid where t3.lname = "Smith" _EX
select count(*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid _EX _EM
select t1.stuid, count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid _EX _EM
select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1 _EX _EM
select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1 _EX _EM
select lname from student where stuid in (select t1.stuid from has_pet as t1 join pets as t2 on t1.petid = t2.petid where t2.pet_age = 3) _EX
select lname from student where stuid in (select t1.stuid from has_pet as t1 join pets as t2 on t1.petid = t2.petid where t2.pettype = "cat") _EX
select avg(age) from student where stuid not in (select t1.stuid from has_pet as t1 join pets as t2 on t1.petid = t2.petid) _EX
select avg(age) from student where stuid not in (select t1.stuid from has_pet as t1 join pets as t2 on t1.petid = t2.petid) _EX
select count(*) from continents _EX _EM
select count(*) from continents _EX _EM
select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid _EX _EM
select t1.contid, t1.countryname, count(*) from continents as t2 join countries as t3 on t1.contid = t3.continent
select count(*) from countries _EX _EM
select count(*) from countries _EX _EM
select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id _EX _EM
select t1.fullname, t2.maker, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker where t1.country = "France" group by t2.maker
select t2.model from cars_data as t1 join model_list as t2 on t1.id = t2.modelid where t1.horsepower = (select min(horsepower) from cars_data)
select t2.model from cars_data as t1 join model_list as t2 on t1.id = t2.modelid where t1.horsepower = (select min(horsepower) from cars_data)
select t2.model from cars_data as t1 join model_list as t2 on t1.id = t2.modelid where t1.weight < (select avg(weight) from cars_data)
select t2.model from cars_data as t1 join model_list as t2 on t1.id = t2.modelid where t1.weight < (select avg(weight) from cars_data)
select t1.maker from car_makers as t1 join cars_data as t2 on t1.id = t2.
select distinct t1.maker from car_makers as t1 join cars_data as t2 on t1.id = t2.
select t1.make, t1.year from car_names as t2 join cars_data as t3 on t1.make = t2.id
select t1.maker, t1.year from car_makers as t1
select distinct model from cars_data as t1 join model_list as t2 on t1.modelid
select distinct t2.model from cars_data as t1 join model_list as t2 on t1.id = t2.modelid where t1.year > 1980
select t1.continent, count(*) from continents as t1 join car_makers as t2 on t1.contid = t2.id group by t1.continent
select t1.continent, count(*) from continents as t1 join car_makers as t2 on t1.contid = t2.id group by t1.continent
select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country where t2.country = (select country from car_makers group by t2.country order by count(*) desc limit 1)
select country from car_makers group by country order by count(*) desc limit 1
select count(*), t1.fullname from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id _EX _EM
select count(*), t1.id, t1.fullname from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id _EX _EM
select t1.accelerate from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t2.make = "amc hornet sportabout" _EM
select t2.accelerate from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t1.make = "amc hornet sportabout (sw)" _EX _EM
select count(*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country where t1.countryname = "france" _EX _EM
select count(distinct t2.maker) from countries as t1 join car_makers as t2 on t1.countryid = t2.country where t1.countryname = "france"
select count(*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country where t1.countryname = "usa"
select count(distinct t1.model) from model_list as t1 join car_makers as t2 on t1.modelid = t2.id where t2.country = "USA"
select avg(mpg) from cars_data where cylinders = 4 _EX _EM
select avg(mpg) from cars_data where cylinders = 4 _EX _EM
select min(weight) from cars_data where cylinders = 8 and year = 1974 _EX _EM
select min(weight) from cars_data where cylinders = 8 and year = 1974 _EX _EM
select maker, model from model_list _EX _EM
select maker, model from model_list _EX _EM
select t1.countryname, t1.countryid from countries as t1 join car_makers as t2 on t1.countryid = t2.country where t2.country = "France"
select t1.countryname, t1.countryid from countries as t1 join car_makers as t2 on t1.countryid = t2.country where t2.country = "France"
select count(*) from cars_data where horsepower > 150 _EX _EM
select count(*) from cars_data where horsepower > 150 _EX _EM
select avg(weight), year from cars_data group by year _EX _EM
select avg(weight), year from cars_data group by year _EX _EM
select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country where t1.continent = "europe" group by t1.countryname having count(*) >= 3
select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country where t1.continent = "europe" group by t1.countryname having count(*) >= 3
select max(horsepower), t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.cylinders = 3 _EX
select max(horsepower), t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.model where t1.cylinders = 3
select t2.model from cars_data as t1 join model_list as t2 on t1.id = t2.modelid group by t2.modelid order by mpg desc limit 1
select t2.model from cars_data as t1 join model_list as t2 on t1.id = t2.modelid join car_names as t3 on t2.modelid = t3.model
select avg(horsepower) from cars_data where year < 1980 _EX _EM
select avg(horsepower) from cars_data where year < 1980 _EX _EM
select avg(t1.edispl) from cars_data as t1 join model_list as t2 on t1.id = t2.modelid where t2.model = "volvo"
select avg(t1.edispl) from cars_data as t1 join car_makers as t2 on t1.modelid
select max(accelerate), cylinders from cars_data group by cylinders _EX _EM
select max(accelerate), cylinders from cars_data group by cylinders _EX _EM
select model from car_names group by model order by count(*) desc limit 1 _EX _EM
select model from model_list group by model order by count(*) desc limit 1
select count(*) from cars_data where cylinders > 4 _EX _EM
select count(*) from cars_data where cylinders > 4 _EX _EM
select count(*) from cars_data where year = 1980 _EX _EM
select count(*) from cars_data where year = 1980 _EX _EM
select count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.modelid where t1.fullname = "American Motor Company" _EX _EM
select count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.modelid where t1.fullname = "American Motor Company" _EX _EM
select t1.fullname, t1.id from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count(*) > 3 _EX _EM
select t1.fullname, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count(*) > 3
select distinct t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.model
select distinct t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.model where t1.fullname = "General Motors" or t2.weight
select year from cars_data where weight <= 3000 and weight > 4000
select distinct year from cars_data where weight < 4000 intersect select distinct year from cars_data where weight > 3000 _EX
select horsepower from cars_data order by accelerate desc limit 1 _EX _EM
select horsepower from cars_data order by accelerate desc limit 1 _EX _EM
select t1.cylinders from cars_data as t1 join model_list as t2 on t1.id = t2.modelid where t2.model = "volvo" order by t1.accelerate limit 1
select t1.cylinders from cars_data as t1 join model_list as t2 on t1.id = t2.modelid where t2.model = "volvo" order by t1.accelerate limit 1
select count(*) from cars_data where accelerate > (select max(accelerate) from cars_data order by horsepower desc limit 1)
select count(*) from cars_data where accelerate > (select max(accelerate) from cars_data order by horsepower desc limit 1)
select count(*) from (select country from car_makers group by country having count(*) > 2)
select count(*) from (select country from car_makers group by country having count(*) > 2)
select count(*) from cars_data where cylinders > 6 _EX _EM
select count(*) from cars_data where cylinders > 6 _EX _EM
select t2.model from cars_data as t1 join model_list as t2 on t1.id = t2.model where t1.cylinders = 4
select t2.model from cars_data as t1 join model_list as t2 on t1.id = t2.modelid where t1.cylinders = 4
select t1.makeid, t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.horsepower > ( select min(horsepower) from cars_data ) except select t1.makeid, t1.make from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.cylinders > 3 _EX
select t1.makeid, t1.
select max(mpg) from cars_data where cylinders = 8 or year < 1980 _EX _EM
select max(mpg) from cars_data where cylinders = 8 or year < 1980 _EX _EM
select model from model_list except select t1.model from model_list as t1 join car_makers as t2 on t1.model = t2.id where t2.fullname = 'Ford Motor Company'
select distinct t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.model where t1.fullname = "Ford Motor Company" except select distinct t2.model from car_makers as t1 join model_list as t2 on t1.id = t2.model where t1.fullname = "Ford Motor Company"
select countryname from countries where countryid not in (select country from car_makers)
select countryname from countries where countryid not in (select country from car_makers)
select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.id having count(*) >= 2 intersect select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.id having count(*) > 3
select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.id having count(*) >= 2 intersect select t1.id, t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.modelid group by t1.id having count(*) > 3
select t1.countryid, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country
select t1.countryid, t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country where t2.maker = "fiat" group by t1.countryid having count(*) > 3 union select t1.countryid, t1.countryname from countries as t1 join model_list as t2 on t1.countryid = t2.modelid where t2.model = "fiat"
select country from airlines where airline = "JetBlue Airways" _EX _EM
select country from airlines where airline = "Jazz" and abbreviation = "Jazz"
select abbreviation from airlines where airline = "JetBlue Airways" _EX _EM
select abbreviation from airlines where airline = "Jazz" _EM
select airline, abbreviation from airlines where country = "USA" _EX _EM
select airline, abbreviation from airlines where country = 'USA' _EX _EM
select airportcode, airportname from airports where city = "Anthony" _EX _EM
select airportcode, airportname from airports where city = "Anthony" _EX _EM
select count(*) from airlines _EX _EM
select count(*) from airlines _EX _EM
select count(*) from airports _EX _EM
select count(*) from airports _EX _EM
select count(*) from flights _EX _EM
select count(*) from flights _EX _EM
select airline from airlines where abbreviation = 'UAL' _EX _EM
select airline from airlines where abbreviation = 'UAL' _EX _EM
select count(*) from airlines where country = 'USA' _EX _EM
select count(*) from airlines where country = 'USA' _EX _EM
select city, country from airports where airportname = "Alton" _EX _EM
select city, country from airports where airportname = "Alton" _EX _EM
select airportname from airports where airportcode = "AKO" _EX _EM
select airportname from airports where airportcode = 'AKO' _EX _EM
select airportname from airports where city = 'Aberdeen' _EX _EM
select airportname from airports where city = 'Aberdeen' _EX _EM
select count(*) from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.airportcode = "APG" _EX
select count(*) from flights where destairport = 'APG' _EX _EM
select count(*) from airports as t1 join flights as t2 on t1.airportcode = t2.airportcode
select count(*) from airports as t1 join flights as t2 on t1.airportcode = t2.airportcode
select count(*) from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = "Aberdeen" _EX _EM
select count(*) from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = "Aberdeen" _EX _EM
select count(*) from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = "Aberdeen" _EX _EM
select count(*) from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = "Aberdeen" _EX _EM
select count(*) from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = 'Aberdeen' and t1.airportname = 'Ashley' _EX
select count(*) from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = "Aberdeen" and t1.airportname = "Ashley" _EX
select count(*) from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = "JetBlue Airways" _EX _EM
select count(*) from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.abbreviation = "Jazz" and t1.country = "USA"
select count(*) from airlines as t1 join airports as t2 on t1.uid = t2.airportcode where t2.airportcode = "ASY" and t1.airline = "United Airlines" _EX
select count(*) from airlines as t1 join airports as t2 on t1.uid = t2.airportcode where t2.airportcode = "ASY" and t1.airline = "United Airlines" _EX
select count(*) from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = 'United Airlines' and t2.destairport = 'AHD' _EX _EM
select count(*) from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = "United Airlines" and t2.destairport = "AHD" _EX _EM
select count(*) from airlines as t1 join airports as t2 on t1.uid = t2.airportcode where t2.city = 'Aberdeen' and t1.abbreviation = 'United Airlines' _EX
select count(*) from airlines as t1 join airports as t2 on t1.uid = t2.airportcode where t2.city = "Aberdeen" and t1.airline = "United Airlines" _EX
select t3.city from flights as t1 join airports as t2 on t1.sourceairport = t2.airportname join airports as t3 on t1.destairport = t3.airportcode group by t3.city order by count(*) desc limit 1 _EX
select city from airports group by city order by count(*) desc limit 1
select city from airports group by city order by count(*) desc limit 1
select city from airports group by city order by count(*) desc limit 1
select t1.airportcode from airports as t1 join flights as t2 on t1.city = t2.sourceairport group by t2.sourceairport order by count(*) desc limit 1 _EX _EM
select t1.airportcode from airports as t1 join flights as t2 on t1.city = t2.sourceairport group by t2.sourceairport order by count(*) desc limit 1 _EX _EM
select t1.airportcode from airports as t1 join flights as t2 on t1.city = t2.sourceairport group by t2.sourceairport order by count(*) limit 1 _EX _EM
select t1.airportcode from airports as t1 join flights as t2 on t1.city = t2.sourceairport and t2.airportname
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t2.airline order by count(*) desc limit 1
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline order by count(*) desc limit 1 _EX _EM
select t1.abbreviation, t1.country from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t2.airline order by count(*) limit 1
select t1.abbreviation, t1.country from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t2.airline order by count(*) limit 1
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = 'AHD' _EX _EM
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = "AHD" _EX _EM
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = 'AHD' _EX _EM
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.destairport = "AHD" _EX _EM
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'APG' intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'CVO' _EX _EM
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = "APG" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = "CVO" _EX _EM
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'CVO' except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = 'APG' _EX _EM
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = "CVO" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.sourceairport = "APG" _EX _EM
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t2.airline having count(*) >= 10
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline having count(*) >= 10 _EX
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline having count(*) < 200 _EX _EM
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t1.airline having count(*) < 200 _EX _EM
select t2.flightno from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = "United Airlines" _EX _EM
select t2.flightno from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.airline = "United Airlines" _EX _EM
select flightno from flights where destairport = "APG" _EX _EM
select flightno from flights where destairport = "APG" _EX _EM
select flightno from flights where destairport = "APG" _EX _EM
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport = t2.airportcode where t2.airportcode = "APG" _EX
select t2.flightno from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = "Aberdeen" _EX _EM
select t2.flightno from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = "Aberdeen" _EX _EM
select t2.flightno from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = "Aberdeen" _EX _EM
select t2.flightno from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = "Aberdeen" _EX _EM
select count(*) from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = "Aberdeen" or t1.city = "Abiden" _EX _EM
select count(*) from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t1.city = "Aberdeen" or t1.city = "Abiden" _EX _EM
select airportname from airports except select t1.airportname from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t2.flightno = 1
select airportname from airports except select t1.airportname from airports as t1 join flights as t2 on t1.airportcode = t2.sourceairport where t2.flightno = 1
select count(*) from employee _EX _EM
select count(*) from employee _EX _EM
select name from employee order by age asc _EX _EM
select name from employee order by age asc _EX _EM
select city, count(*) from employee group by city _EX _EM
select city, count(*) from employee group by city _EX _EM
select city from employee where age < 30 group by city having count(*) > 1 _EX _EM
select city from employee where age < 30 group by city having count(*) > 1 _EX _EM
select location, count(*) from shop group by location _EX _EM
select location, count(*) from shop group by location _EX _EM
select manager_name, district from shop order by number_products desc limit 1 _EX _EM
select manager_name, district from shop order by number_products desc limit 1 _EX _EM
select min(number_products), max(number_products) from shop _EX _EM
select min(number_products), max(number_products) from shop _EX _EM
select name, location, district from shop order by number_products desc _EX _EM
select name, location, district from shop order by number_products desc _EX _EM
select name from shop where number_products > (select avg(number_products) from shop) _EX _EM
select name from shop where number_products > (select avg(number_products) from shop) _EX _EM
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t2.employee_id order by count(*) desc limit 1 _EX _EM
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id group by t2.employee_id order by count(*) desc limit 1 _EX _EM
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id where t2.bonus = 1
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id = t2.employee_id order by t2.bonus desc limit 1 _EX _EM
select name from employee where employee_id not in (select employee_id from evaluation) _EX _EM
select name from employee where employee_id not in (select employee_id from evaluation) _EX _EM
select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count(*) desc limit 1 _EX _EM
select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count(*) desc limit 1 _EX _EM
select name from shop where shop_id not in (select shop_id from hiring) _EX _EM
select name from shop where shop_id not in (select shop_id from hiring) _EX _EM
select count(*), t3.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id join employee as t3 on t1.employee_id = t3.employee_id group by t3.name
select count(*), t1.name from shop as t1 join hiring as t2 on t1.shop_id = t2.shop_id group by t1.shop_id
select sum(bonus) from evaluation _EX _EM
select sum(bonus) from evaluation _EX _EM
select * from hiring _EX _EM
select * from hiring _EX _EM
select district from shop where number_products < 3000 intersect select district from shop where number_products > 10000 _EX _EM
select district from shop where number_products < 3000 intersect select district from shop where number_products > 10000 _EX _EM
select count(distinct location) from shop _EX _EM
select count(distinct location) from shop _EX _EM
select count(*) from documents _EX _EM
select count(*) from documents _EX _EM
select document_id, document_name, document_description from documents _EX _EM
select document_id, document_name, document_description from documents _EX _EM
select document_name, template_id from documents where document_description like "%w%" _EX _EM
select document_name, template_id from documents where document_description like "%w%" _EX _EM
select document_id, template_id, document_description from documents where document_name = "Robbin CV" _EX _EM
select document_id, template_id, document_description from documents where document_name = "Robbin CV" _EX _EM
select count(distinct template_id) from documents _EX _EM
select count(distinct template_id) from documents _EX _EM
select count(*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = "PPT" _EX _EM
select count(*) from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = "PPT" _EX _EM
select template_id, count(*) from documents group by template_id _EX _EM
select template_id, count(*) from documents group by template_id _EX _EM
select t1.template_id, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_id order by count(*) desc limit 1 _EX _EM
select t1.template_id, t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_id order by count(*) desc limit 1 _EX _EM
select template_id from documents group by template_id having count(*) > 1 _EX _EM
select template_id from documents group by template_id having count(*) > 1 _EX _EM
select template_id from templates except select template_id from documents _EX _EM
select template_id from templates except select template_id from documents _EX _EM
select count(*) from templates _EX _EM
select count(*) from templates _EX _EM
select template_id, version_number, template_type_code from templates _EX _EM
select template_id, version_number, template_type_code from templates _EX _EM
select distinct template_type_code from templates _EX _EM
select distinct template_type_code from templates _EX _EM
select template_id from templates where template_type_code = "PP" or template_type_code = "PPT" _EX _EM
select template_id from templates where template_type_code = "PP" or template_type_code = "PPT" _EX _EM
select count(*) from templates where template_type_code = "CV" _EX _EM
select count(*) from templates where template_type_code = "CV" _EX _EM
select version_number, template_type_code from templates where version_number > 5 _EX _EM
select version_number, template_type_code from templates where version_number > 5 _EX _EM
select template_type_code, count(*) from templates group by template_type_code _EX _EM
select template_type_code, count(*) from templates group by template_type_code _EX _EM
select template_type_code from templates group by template_type_code order by count(*) desc limit 1 _EX _EM
select template_type_code from templates group by template_type_code order by count(*) desc limit 1 _EX _EM
select template_type_code from templates group by template_type_code having count(*) < 3 _EX _EM
select template_type_code from templates group by template_type_code having count(*) < 3 _EX _EM
select version_number, template_type_code from templates order by version_number asc limit 1 _EX
select template_type_code, version_number from templates order by version_number asc limit 1 _EX
select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t2.document_name = "Data base" _EX _EM
select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id where t2.document_name = "Data base" _EX _EM
select document_name from documents as t1 join templates as t2 on t1.template_id = t2.template_id where t2.template_type_code = "BK" _EX _EM
select document_name from documents where template_id in (select template_id from templates where template_type_code = "BK") _EX
select t1.template_type_code, count(*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code _EX _EM
select t1.template_type_code, count(*) from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code _EX _EM
select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code order by count(*) desc limit 1 _EX _EM
select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code order by count(*) desc limit 1 _EX _EM
select template_type_code from templates except select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id _EX _EM
select template_type_code from templates except select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id _EX _EM
select template_type_code, template_type_description from ref_template_types _EX _EM
select template_type_code, template_type_description from ref_template_types _EX _EM
select template_type_description from ref_template_types where template_type_code = "AD" _EX _EM
select template_type_description from ref_template_types where template_type_code = "AD" _EX _EM
select template_type_code from ref_template_types where template_type_description = "Book" _EX _EM
select template_type_code from ref_template_types where template_type_description = "Book" _EX _EM
select distinct t1.template_type_description from ref_template_types as t1 join documents as t2 on t1.template_type_code = t2.template_id
select distinct t1.template_type_description from ref_template_types as t1 join documents as t2 on t1.template_type_code = t2.template_id
select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code = t2.template_type_code where t2.template_type_description = "Presentation" _EX _EM
select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code = t2.template_type_code where t2.template_type_description = "Presentation" _EX _EM
select count(*) from paragraphs _EX _EM
select count(*) from paragraphs _EX _EM
select count(*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Summer Show" _EX _EM
select count(*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Summer Show" _EX _EM
select other_details from paragraphs where paragraph_text = "Korea" _EX
select other_details from paragraphs where paragraph_text like '%korea%' _EX _EM
select t1.paragraph_id, t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Welcome to NY" _EX _EM
select t1.paragraph_id, t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Welcome to NY" _EX _EM
select t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id where t1.document_name = "Customer reviews" _EX _EM
select t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id where t1.document_name = "Customer reviews" _EX _EM
select document_id, count(*) from paragraphs group by document_id order by count(*)
select document_id, count(*) from paragraphs group by document_id order by count(*)
select t1.document_id, t1.document_name, count(*) from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id group by t1.document_id _EX _EM
select t1.document_id, t1.document_name, count(*) from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id group by t1.document_id _EX _EM
select document_id from paragraphs group by document_id having count(*) >= 2 _EX _EM
select document_id from paragraphs group by document_id having count(*) >= 2 _EX _EM
select t1.document_id, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id group by t1.document_id order by count(*) desc limit 1 _EX _EM
select t1.document_id, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id group by t1.document_id order by count(*) desc limit 1 _EX _EM
select document_id from paragraphs group by document_id order by count(*) asc limit 1 _EX _EM
select document_id from paragraphs group by document_id order by count(*) asc limit 1 _EX _EM
select document_id from paragraphs group by document_id having count(*) between 1 and 2 _EX _EM
select document_id from paragraphs group by document_id having count(*) between 1 and 2 _EX _EM
select document_id from paragraphs where paragraph_text = 'Brazil' intersect select document_id from paragraphs where paragraph_text = 'Ireland' _EX _EM
select document_id from paragraphs where paragraph_text = 'Brazil' intersect select document_id from paragraphs where paragraph_text = 'Ireland' _EX _EM
select count(*) from teacher _EX _EM
select count(*) from teacher _EX _EM
select name from teacher order by age asc _EX _EM
select name from teacher order by age asc _EX _EM
select age, hometown from teacher _EX _EM
select age, hometown from teacher _EX _EM
select name from teacher where hometown!= 'Little Lever Urban District' _EM
select name from teacher where hometown!= 'Little Lever Urban District' _EM
select name from teacher where age = 32 or age = 33 _EX _EM
select name from teacher where age = 32 or age = 33 _EX _EM
select hometown from teacher order by age limit 1 _EX _EM
select hometown from teacher order by age limit 1 _EX _EM
select hometown, count(*) from teacher group by hometown _EX _EM
select hometown, count(*) from teacher group by hometown _EX _EM
select hometown from teacher group by hometown order by count(*) desc limit 1 _EX _EM
select hometown from teacher group by hometown order by count(*) desc limit 1 _EX _EM
select hometown from teacher group by hometown having count(*) >= 2 _EX _EM
select hometown from teacher group by hometown having count(*) >= 2 _EX _EM
select t2.name, t3.course from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id _EX _EM
select t2.name, t3.course from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id _EX _EM
select t2.name, t3.course from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id order by t2.name asc _EX _EM
select t2.name, t3.course from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id order by t2.name asc _EX _EM
select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id where t3.course = 'Math' _EX _EM
select distinct t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id where t3.course = 'Math' _EX _EM
select t2.name, count(*) from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name _EX _EM
select t2.name, count(*) from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name _EX _EM
select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count(*) >= 2 _EX _EM
select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count(*) >= 2 _EX _EM
select name from teacher where teacher_id not in (select teacher_id from course_arrange) _EX _EM
select name from teacher where teacher_id not in (select teacher_id from course_arrange) _EX _EM
select count(*) from visitor where age < 30 _EX _EM
select name from visitor where level_of_membership > 4 order by level_of_membership desc _EX _EM
select avg(age) from visitor where level_of_membership!= 4
select name, level_of_membership from visitor where level_of_membership > 4 order by age desc _EX _EM
select t1.museum_id, t1.name from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t1.museum_id order by sum(t1.num_of_staff) desc limit 1 _EX
select avg(num_of_staff) from museum where open_year < 2009 _EX _EM
select open_year, num_of_staff from museum where name = 'Plaza Museum' _EX _EM
select name from museum where num_of_staff > (select min(num_of_staff) from museum where open_year > 2010) _EX _EM
select t1.id, t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id having count(*) > 1 _EX _EM
select t1.id, t1.name, t1.level_of_membership from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t1.id order by sum(t2.total_spent) desc limit 1 _EM
select t1.museum_id, t1.name from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t2.museum_id order by count(*) desc limit 1 _EX _EM
select name from museum where museum_id not in (select museum_id from visit) _EX _EM
select t1.name, t1.age from visitor as t1 join visit as t2 on t1.id = t2.visitor_id group by t2.visitor_id order by sum(t2.num_of_ticket) desc limit 1 _EX
select avg(num_of_ticket), max(num_of_ticket) from visit _EX _EM
select sum(t2.total_spent) from visitor as t1 join visit as t2 on t1.id = t2.visitor_id where t1.level_of_membership = 1 _EX _EM
select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id join museum as t3 on t1.museum_id = t3.museum_id where t3.open_year < 2009 intersect select t2.name from visit as t1 join visitor as t2 on t1.visitor_id = t2.id join museum as t3 on t1.museum_id = t3.museum_id where t3.open_year > 2011 _EX _EM
select count(distinct t1.id) from visitor as t1 join visit as t2 on t1.id = t2.visitor_id join museum as t3 on t2.museum_id = t3.museum_id where t3.open_year > 2010
select count(*) from museum where open_year > 2013 or open_year < 2008 _EX _EM
select count(*) from players _EX _EM
select count(*) from players _EX _EM
select count(*) from matches _EX _EM
select count(*) from matches _EX _EM
select first_name, birth_date from players where country_code = 'USA' _EX _EM
select first_name, birth_date from players where country_code = 'USA' _EX _EM
select avg(loser_age), avg(winner_age) from matches _EX _EM
select avg(loser_age), avg(winner_age) from matches _EX _EM
select avg(winner_rank) from matches _EX _EM
select avg(winner_rank) from matches _EX _EM
select loser_rank from matches group by loser_rank order by count(*) desc limit 1
select loser_rank from matches
select count(distinct country_code) from players _EX _EM
select count(distinct country_code) from players _EX _EM
select count(distinct loser_name) from matches _EX _EM
select count(distinct loser_name) from matches _EX _EM
select tourney_name from matches group by tourney_name having count(*) > 10 _EX _EM
select tourney_name from matches group by tourney_name having count(*) > 10 _EX _EM
select winner_name from matches where year = 2013 intersect select winner_name from matches where year = 2016 _EX _EM
select winner_name from matches where year = 2013 intersect select winner_name from matches where year = 2016 _EX _EM
select count(*) from matches where year = 2013 or year = 2016 _EX _EM
select count(*) from matches where year = 2013 or year = 2016 _EX _EM
select t1.country_code, t1.first_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = "WTA Championships" intersect select t1.country_code, t1.first_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = "Australian Open" _EX _EM
select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = "WTA Championships" intersect select t1.first_name, t1.country_code from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tourney_name = "Australian Open" _EX _EM
select first_name, country_code from players order by birth_date desc limit 1
select first_name, country_code from players order by birth_date desc limit 1
select first_name, last_name from players order by birth_date _EM
select first_name, last_name from players order by birth_date _EM
select first_name, last_name from players where hand = "L" order by birth_date _EX _EM
select first_name, last_name from players where birth_date = "left" order by birth_date
select t1.first_name, t1.country_code from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t2.player_id order by count(*) desc limit 1
select t1.first_name, t1.country_code from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t2.player_id order by count(*) desc limit 1
select year from matches group by year order by count(*) desc limit 1 _EX _EM
select year from matches group by year order by count(*) desc limit 1 _EX _EM
select t1.winner_name, t1.winner_rank_points from matches as t1 join rankings as t2 on t1.winner_id = t2.player_id group by t2.player_id order by count(*) desc limit 1
select t1.winner_name, t1.winner_rank_points from matches as t1 join rankings as t2 on t1.winner_id = t2.player_id group by t2.player_id order by count(*) desc limit 1
select t1.winner_name from matches as t1 join rankings as t2 on t1.winner_id = t2.player_id join
select t1.winner_name from matches as t1 join rankings as t2 on t1.winner_id = t2.player_id join
select loser_name, winner_name from matches order by minutes desc limit 1 _EX _EM
select t1.winner_name, t1.loser_name from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.minutes = (select max(minutes) from matches) _EX
select avg(t1.ranking), t2.first_name from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t2.first_name _EX _EM
select t1.first_name, avg(t2.ranking) from players as t1 join rankings as t2 on t1.player_id = t2.player_id where t1.country_code = "USA" group by t1.first_name
select sum(ranking_points), t1.first_name from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.first_name _EX _EM
select t1.first_name, sum(t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id = t2.player_id where t1.country_code = "USA" group by t1.player_id
select country_code, count(*) from players group by country_code _EX _EM
select country_code, count(*) from players group by country_code _EX _EM
select country_code from players group by country_code order by count(*) desc limit 1 _EX _EM
select country_code from players group by country_code order by count(*) desc limit 1 _EX _EM
select country_code from players group by country_code having count(*) > 50 _EX _EM
select country_code from players group by country_code having count(*) > 50 _EX _EM
select ranking_date, sum(tours) from rankings group by ranking_date _EX _EM
select ranking_date, sum(tours) from rankings group by ranking_date _EX _EM
select count(*), year from matches group by year _EX _EM
select year, count(*) from matches group by year _EX _EM
select t1.winner_name, t1.winner_rank from matches as t1 join players as t2 on t1.winner_id = t2.player_id order by t2.birth_date asc limit 3
select t1.winner_name, t1.winner_rank from matches as t1 join players as t2 on t1.winner_id = t2.player_id order by t1.winner_age asc limit 3 _EX
select count(distinct t1.winner_name) from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.tourney_name = "WTA Championships" intersect select count(distinct t1.winner_name) from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.tourney_name = "Left Hand"
select count(*) from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.tourney_name = "WTA Championships" and t2.hand = "left"
select t1.first_name, t1.country_code, t1.birth_date from players as t1 join matches as t2 on t1.player_id = t2.winner_id group by t2.winner_id order by t2.winner_rank_points desc limit 1 _EX
select t1.first_name, t1.country_code, t1.birth_date from players as t1 join rankings as t2 on t1.player_id = t2.player_id join matches as t3 on t2.match_
select hand, count(*) from players group by hand _EX _EM
select hand, count(*) from players group by hand _EX _EM
select count(*) from ship where disposition_of_ship = 'Captured' _EX _EM
select name, tonnage from ship order by name desc _EX _EM
select name, date, result from battle
select max(killed), min(killed) from death group by killed
select avg(injured), count(*) from death group by injured
select t1.killed, t1.injured from death as t1 join ship as t2 on t1.
select name, result from battle where bulgarian_commander!= 'Boril' _EX _EM
select distinct t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.ship_type = 'Brig' _EX _EM
select t1.id, t1.name from battle as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id having sum(t2.killed) > 10
select t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.caused_by_ship_id group by t1.id order by sum(t2.injured) desc limit 1
select distinct name from battle where bulgarian_commander = 'Kaloyan' and latin_commander = 'Baldwin I' _EX _EM
select count(distinct result) from battle _EX _EM
select count(*) from battle where id not in ( select lost_in_battle from ship where tonnage = '225' ) _EX _EM
select t1.name, t1.date from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = 'Lettice' intersect select t1.name, t1.date from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = 'HMS Atalanta' _EX _EM
select name, result, bulgarian_commander from battle except select t1.name, t1.result, t1.bulgarian_commander from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location = 'English Channel' _EX _EM
select note from death where note like "%east%" _EX _EM
select address_id from addresses where line_1 > line_2 intersect select address_id from addresses where line_1 = "null"
select line_1, line_2 from addresses _EX _EM
select count(*) from courses _EX _EM
select count(*) from courses _EX _EM
select course_description from courses where course_name = "math" _EX _EM
select course_description from courses where course_name = "math" _EX _EM
select zip_postcode from addresses where city = "Port Chelsea" _EX _EM
select zip_postcode from addresses where city = "Port Chelsea" _EX _EM
select t1.department_name, t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count(*) desc limit 1 _EX _EM
select t1.department_name, t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count(*) desc limit 1 _EX _EM
select count(distinct department_id) from degree_programs _EX _EM
select count(distinct department_id) from degree_programs _EX _EM
select count(distinct degree_summary_name) from degree_programs _EX _EM
select count(distinct degree_program_id) from degree_programs
select count(*) from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id where t1.department_name = "engineering" _EX _EM
select count(*) from departments as t1 join degree_programs as t2 on t1.department_id = t2.department_id where t1.department_name = "engineering" _EX _EM
select section_name, section_description from sections _EX _EM
select section_name, section_description from sections _EX _EM
select t1.course_name, t1.course_id from courses as t1 join sections as t2 on t1.course_id = t2.course_id group by t1.course_id having count(*) <= 2 _EX _EM
select t1.course_name, t1.course_id from courses as t1 join sections as t2 on t1.course_id = t2.course_id group by t1.course_id having count(*) < 2
select section_name from sections order by section_name desc _EX _EM
select section_name from sections order by section_name desc _EX _EM
select t2.semester_name, t1.semester_id from student_enrolment as t1 join semesters as t2 on t1.semester_id = t2.semester_id group by t1.semester_id order by count(*) desc limit 1 _EX _EM
select t2.semester_name, t1.semester_id from student_enrolment as t1 join semesters as t2 on t1.semester_id = t2.semester_id group by t1.semester_id order by count(*) desc limit 1 _EX _EM
select department_description from departments where department_name like "%computer%" _EX _EM
select department_description from departments where department_name like "%computer%" _EX _EM
select t1.first_name, t1.middle_name, t1.last_name, t2.student_enrolment_id from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_enrolment_id group by t2.student_enrolment_id having count(*) = 2
select t1.first_name, t1.middle_name, t1.last_name, t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id having count(*) = 2 _EX _EM
select t3.first_name, t3.middle_name, t3.last_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id join students as t3 on t2.student_id = t3.student_id where t1.degree_summary_name = "Bachelor" _EM
select t2.first_name, t2.middle_name, t2.last_name from student_enrolment as t1 join students as t2 on t1.student_id = t2.student_id where t1.degree_program_id = "Bachelors"
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id where t2.student_enrolment_id > 100 group by t1.course_name order by count(*) desc limit 1
select t1.degree_summary_name from degree_programs as t1 join student_enrolment_courses as t2 on t1.degree_program_id = t2.course_id group by t1.degree_summary_name order by count(*) desc limit 1 _EX
select t1.course_id, t1.degree_summary_name from course
select t1.degree_program_id, t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count(*) desc limit 1
select t1.student_id, t1.first_name, t1.middle_name, t1.last_name, count(*) from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count(*) desc limit 1 _EX
select t1.first_name, t1.middle_name, t1.last_name, t1.student_id, count(*) from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count(*) desc limit 1 _EX
select semester_name from semesters where semester_id not in (select semester_id from student_enrolment) _EX _EM
select semester_name from semesters except select t1.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id _EX
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id _EM
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id _EM
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id group by t1.course_id order by count(*) desc limit 1
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id = t2.course_id where t2.student_enrolment_id > 100 group by t1.course_name order by count(*) desc limit 1
select last_name from students where current_address_id in (select t1.current_address_id from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id join degree_programs as t3 on t2.degree_program_id = t3.degree_program_id)
select last_name from students where current_address_id in (select t1.address_id from addresses as t1 join student_enrolment as t2 on t1.address_id = t2.student_id where t1.state_province_county = "North Carolina") except select t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id join degree_programs as t3 on t2.degree_program_id = t3.degree_program_id
select t1.transcript_date, t1.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id having count(*) >= 2 _EX _EM
select t1.transcript_date, t1.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id having count(*) >= 2 _EX _EM
select cell_mobile_number from students where first_name = "Timmothy" and last_name = "Ward" _EX _EM
select cell_mobile_number from students where first_name = "Timmothy" and last_name = "Ward" _EM
select first_name, middle_name, last_name from students order by date_first_registered asc limit 1 _EX _EM
select first_name, middle_name, last_name from students order by date_first_registered asc limit 1 _EX _EM
select first_name, middle_name, last_name from students where date_first_registered = (select min(date_first_registered) from students) _EX
select first_name, middle_name, last_name from students order by date_first_registered limit 1 _EX
select t2.first_name from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id where t1.other_address_details = "null"
select first_name from students where permanent_address_id!= "current_address_id" _EX _EM
select t1.address_id, t1.line_1 from addresses as t1 join students as t2 on t1.address_id = t2.current_address_id group by t1.address_id order by count(*) desc limit 1
select t1.address_id, t1.line_1, t1.line_2 from addresses as t1 join students as t2 on t1.address_id = t2.current_address_id group by t1.address_id order by count(*) desc limit 1 _EX _EM
select avg(transcript_date) from transcripts _EX _EM
select avg(transcript_date) from transcripts _EX _EM
select transcript_date, other_details from transcripts order by transcript_date asc limit 1 _EX _EM
select t1.transcript_date, t1.other_details from transcripts as t1 join transcript_contents as t2 on t1.transcript_id = t2.transcript_id where t2.f
select count(*) from transcripts _EX _EM
select count(*) from transcripts _EX _EM
select max(transcript_date) from transcripts _EX
select max(transcript_date) from transcripts _EX
select count(*), t1.course_id from courses as t1 join transcript_contents as t2 on t1.course_id = t2.course_id
select t1.course_name, t1.student_enrolment_id from courses as t1
select t1.transcript_date, t1.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count(*) asc limit 1 _EX _EM
select t1.transcript_date, t1.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count(*) asc limit 1 _EX _EM
select t2.semester_name from student_enrolment as t1 join semesters as t2 on t1.semester_id = t2.semester_id join degree_programs as t3 on t1.student_enrolment_id = t3.student_enrolment
select semester_id from student_enrolment where student_id = (select student_id from student_enrolment where degree_program_id = 'MA' intersect select student_id from student_enrolment where degree_program_id = 'BS')
select count(distinct t1.address_id) from addresses as t1 join students as t2 on t1.address_id = t2.current_address_id _EX
select distinct t1.address_id from addresses as t1 join students as t2 on t1.address_id = t2.current_address_id
select other_student_details from students order by other_student_details desc _EX _EM
select other_student_details from students order by other_student_details desc _EX _EM
select section_description from sections where section_name = "h" _EX _EM
select section_description from sections where section_name = "h" _EX _EM
select t2.first_name from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id where t1.country = "Haiti" or t2.cell_mobile_number = "09700166582" _EM
select t2.first_name from addresses as t1 join students as t2 on t1.address_id = t2.permanent_address_id where t1.country = "Haiti" or t2.cell_mobile_number = "09700166582" _EM
select title from cartoon order by title _EX _EM
select title from cartoon order by title _EX _EM
select title from cartoon where directed_by = "Ben Jones" _EX _EM
select title from cartoon where directed_by = "Ben Jones" _EX _EM
select count(*) from cartoon where written_by = "Joseph Kuhr" _EX _EM
select count(*) from cartoon where written_by = "Joseph Kuhr" _EX _EM
select title, directed_by from cartoon order by original_air_date _EX _EM
select title, directed_by from cartoon order by original_air_date _EX _EM
select title from cartoon where directed_by = "Ben Jones" or directed_by = "Brandon Vietti" _EX _EM
select title from cartoon where directed_by = "Ben Jones" or directed_by = "Blanco Vietti" _EM
select country, count(*) from tv_channel group by country order by count(*) desc limit 1 _EX _EM
select country, count(*) from tv_channel group by country order by count(*) desc limit 1 _EX _EM
select count(distinct series_name), count(distinct content) from tv_channel _EX _EM
select count(distinct series_name), count(distinct content) from tv_channel _EX _EM
select content from tv_channel where series_name = "Sky Radio" _EX _EM
select content from tv_channel where series_name = "Sky Radio" _EX _EM
select package_option from tv_channel where series_name = "Sky Radio" _EX _EM
select package_option from tv_channel where series_name = "Sky Radio" _EX _EM
select count(*) from tv_channel where language = "English" _EX _EM
select count(*) from tv_channel where language = "English" _EX _EM
select language, count(*) from tv_channel group by language order by count(*) asc limit 1 _EX _EM
select language, count(*) from tv_channel group by language order by count(*) asc limit 1 _EX _EM
select language, count(*) from tv_channel group by language _EX _EM
select language, count(*) from tv_channel group by language _EX _EM
select t2.series_name from cartoon as t1 join tv_channel as t2 on t1.id = t2.channel
select t2.series_name from cartoon as t1 join tv_channel as t2 on t1.id = t2.channel
select t2.title from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel
select t1.title from cartoon as t1 join tv_series as t2 on t1.id = t2.t
select episode from tv_series order by rating _EX _EM
select episode from tv_series order by rating _EX _EM
select episode, rating from tv_series order by rating desc limit 3 _EX _EM
select episode, rating from tv_series order by rating desc limit 3 _EX _EM
select min(share), max(share) from tv_series _EM
select max(share), min(share) from tv_series _EX _EM
select air_date from tv_series where episode = "A love of a Lifetime" _EM
select air_date from tv_series where episode = "A Love of a Lifetime" _EX _EM
select weekly_rank from tv_series where episode = "A love of a Lifetime" _EM
select weekly_rank from tv_series where episode = "A Love of a Lifetime" _EX _EM
select t2.series_name from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t1.episode = "A love of a Lifetime" _EM
select t2.series_name from tv_series as t1 join tv_channel as t2 on t1.id = t2.channel
select t1.episode from tv_series as t1 join tv_channel as t2 on t1.channel = t2.id where t2.series_name = "Sky Radio" _EX _EM
select t1.episode from tv_series as t1 join tv_channel as t2 on t1.id = t2.id where t2.series_name = "Sky Radio" _EM
select directed_by, count(*) from cartoon group by directed_by _EX _EM
select directed_by, count(*) from cartoon group by directed_by _EX _EM
select production_code, channel from cartoon order by original_air_date desc limit 1 _EX _EM
select production_code, channel from cartoon order by original_air_date desc limit 1 _EX _EM
select package_option, series_name from tv_channel where hight_definition_tv = 'Yes' _EM
select package_option, series_name from tv_channel where hight_definition_tv = 'Yes' _EM
select distinct t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel
select t2.country from cartoon as t1 join tv_channel as t2 on t1.id = t2.channel
select distinct country from tv_channel except select distinct t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel _EX
select distinct country from tv_channel except select distinct t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.id where t2.written_by = "Todd Casey" _EM
select t2.series_name, t2.country from cartoon as t1 join tv_channel as t2 on t1.id = t2.channel
select t2.series_name, t2.country from cartoon as t1 join tv_channel as t2 on t1.id = t2.channel
select pixel_aspect_ratio_par, country from tv_channel where language!= "English" _EX _EM
select pixel_aspect_ratio_par, country from tv_channel where language!= "English" _EX _EM
select id from tv_channel where country > 2
select t1.id from tv_channel as t1 join tv_channel group by t1.id having count(*) > 2
select id from tv_channel except select id from cartoon where directed_by = "Ben Jones"
select id from tv_channel except select t1.id from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel
select package_option from tv_channel except select t1.package_option from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel
select package_option from tv_channel except select t1.package_option from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel
select count(*) from poker_player _EX _EM
select count(*) from poker_player _EX _EM
select earnings from poker_player order by earnings desc _EX _EM
select earnings from poker_player order by earnings desc _EX _EM
select final_table_made, best_finish from poker_player _EX _EM
select final_table_made, best_finish from poker_player _EX _EM
select avg(earnings) from poker_player _EX _EM
select avg(earnings) from poker_player _EX _EM
select money_rank from poker_player order by earnings desc limit 1 _EX _EM
select money_rank from poker_player order by earnings desc limit 1 _EX _EM
select max(final_table_made) from poker_player where earnings < 200000 _EX _EM
select max(final_table_made) from poker_player where earnings < 200000 _EX _EM
select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id _EX _EM
select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id _EX _EM
select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id where t1.earnings > 300000 _EX _EM
select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id where t1.earnings > 300000 _EX _EM
select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.final_table_made asc _EX _EM
select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.final_table_made asc _EX _EM
select t2.birth_date from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.earnings limit 1 _EX _EM
select t2.birth_date from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.earnings limit 1 _EX _EM
select t1.money_rank from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t2.height desc limit 1 _EX _EM
select t1.money_rank from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t2.height desc limit 1 _EX _EM
select avg(t1.earnings) from poker_player as t1 join people as t2 on t1.people_id = t2.people_id where t2.height > 200 _EX _EM
select avg(t1.earnings) from poker_player as t1 join people as t2 on t1.people_id = t2.people_id where t2.height > 200 _EX _EM
select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.earnings desc _EX _EM
select t2.name from poker_player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.earnings desc _EX _EM
select nationality, count(*) from people group by nationality _EX _EM
select nationality, count(*) from people group by nationality _EX _EM
select nationality from people group by nationality order by count(*) desc limit 1 _EX _EM
select nationality from people group by nationality order by count(*) desc limit 1 _EX _EM
select nationality from people group by nationality having count(*) >= 2 _EX _EM
select nationality from people group by nationality having count(*) >= 2 _EX _EM
select name, birth_date from people order by name asc _EX _EM
select name, birth_date from people order by name asc _EX _EM
select name from people where nationality!= "Russia" _EX _EM
select name from people where nationality!= 'Russia' _EX _EM
select name from people where people_id not in (select people_id from poker_player) _EX _EM
select name from people where people_id not in (select people_id from poker_player) _EX _EM
select count(distinct nationality) from people _EX _EM
select count(distinct nationality) from people _EX _EM
select count(*) from area_code_state _EX _EM
select contestant_number, contestant_name from contestants order by contestant_name desc _EX _EM
select vote_id, phone_number, state from votes _EX _EM
select max(area_code), min(area_code) from area_code_state _EX _EM
select max(created) from votes where state = 'CA' _EX _EM
select contestant_name from contestants where contestant_name!= "Jessie Alloway" _EX _EM
select distinct state, created from votes _EX _EM
select t1.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t1.contestant_number having count(*) >= 2 _EX _EM
select t1.contestant_number, t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number = t2.contestant_number group by t2.contestant_number order by count(*) asc limit 1 _EX _EM
select count(*) from votes where state = 'NY' or state = 'CA' _EX _EM
select count(*) from contestants where contestant_number not in (select contestant_number from votes) _EX _EM
select t1.area_code from area_code_state as t1 join votes as t2 on t1.area_code = t2.area_code
select t1.created, t1.state, t1.phone_number from votes as t1 join contestants as t2 on t1.contestant_number = t2.contestant_number where t2.contestant_name = "Tabatha Gehling" _EX _EM
select t1.area_code from area_code_state as t1 join votes as t2 on t1.area_code = t2.area_code
select contestant_name from contestants where contestant_name like "%al%" _EX _EM
select name from country where indepyear > 1950 _EX _EM
select name from country where indepyear > 1950 _EX _EM
select count(*) from country where governmentform = "Republic" _EX _EM
select count(*) from country where governmentform = "Republic" _EX _EM
select sum(surfacearea) from country where region = 'Caribbean' _EX _EM
select sum(surfacearea) from country where region = 'Carribean' _EM
select continent from country where name = 'Anguilla' _EX _EM
select distinct continent from country where name = 'Anguilla' _EX _EM
select t2.region from city as t1 join country as t2 on t1.id = t2.countrycode
select t2.region from city as t1 join country as t2 on t1.id = t2.countrycode
select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = "Aruba" group by t2.language order by count(*) desc limit 1
select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = "Aruba" group by t2.language order by count(*) desc limit 1
select population, lifeexpectancy from country where name = 'Brazil' _EX _EM
select population, lifeexpectancy from country where name = 'Brazil' _EX _EM
select region, population from country where name = 'Angola' _EX _EM
select region, population from country where name = 'Angola' _EX _EM
select avg(lifeexpectancy) from country where region = 'Central Africa' _EX _EM
select avg(lifeexpectancy) from country where region = 'Central Africa' _EX _EM
select name from country where continent = 'Asia' order by lifeexpectancy limit 1 _EX _EM
select name from country where continent = 'Asia' order by lifeexpectancy limit 1 _EX _EM
select sum(population), max(gnp) from country where continent = 'Asia' _EX _EM
select population, gnp from country where continent = 'Asia' order by population desc limit 1
select avg(lifeexpectancy) from country where continent = 'Africa' and governmentform = 'Republic' _EX _EM
select avg(lifeexpectancy) from country where continent = 'Africa' and governmentform = 'Republic' _EX _EM
select sum(surfacearea) from country where continent = 'Asia' intersect select sum(surfacearea) from country where continent = 'Europe'
select sum(surfacearea) from country where continent = 'Asia' or continent = 'Europe' _EX _EM
select population from city where district = 'Gelderland'
select sum(population) from city where district = 'Geenerland' _EM
select avg(gnp), sum(population) from country where governmentform = 'US Territory' _EX _EM
select avg(gnp), sum(population) from country where governmentform = 'US Territory' _EX _EM
select count(distinct language) from countrylanguage _EX _EM
select count(distinct language) from countrylanguage _EX _EM
select count(distinct governmentform) from country where continent = 'Africa' _EX _EM
select count(distinct governmentform) from country where continent = 'Africa' _EX _EM
select count(distinct t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = "Aruba" _EX _EM
select count(distinct t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = "Aruba" _EX _EM
select count(distinct language) from countrylanguage as t1 join country as t2 on t1.countrycode = t2.code where t2.name = "Afghanistan"
select count(distinct t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.name = "Afghanistan"
select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode
select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode
select t1.continent from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t2.countrycode order by count(*) desc limit 1
select t1.continent from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode
select count(*) from countrylanguage where language = "English" intersect select count(*) from countrylanguage where language = "Dutch"
select count(*) from countrylanguage where language = "English" intersect select count(*) from countrylanguage where language = "Dutch"
select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'English' intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'French' _EX _EM
select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'English' intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'French' _EX _EM
select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'English' intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'French'
select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'English' intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'French'
select count(distinct t1.continent) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = "Chinese" _EX _EM
select count(distinct t1.continent) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = "Chinese" _EX _EM
select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = "English" or t2.language = "Dutch" _EX _EM
select distinct t2.region from countrylanguage as t1 join country as t2 on t1.countrycode = t2.countrycode
select countrycode from countrylanguage where language = "English" or language = "Dutch"
select countrycode from countrylanguage where language = "English" or language = "Dutch"
select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = "Asia" group by t2.language order by count(*) desc limit 1 _EX _EM
select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.continent = "Asia" group by t2.language order by count(*) desc limit 1 _EX _EM
select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.governmentform = "Republic" group by t2.language having count(*) = 1 _EX _EM
select distinct t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.governmentform = "Republic"
select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where t2.language = 'English' group by t1.name order by count(*) desc limit 1
select t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where t2.language = 'English' group by t1.name order by count(*) desc limit 1
select name, population, lifeexpectancy from country where continent = 'Asia' order by surfacearea desc limit 1 _EX _EM
select name, population, lifeexpectancy from country where continent = 'Asia' order by surfacearea desc limit 1 _EX _EM
select avg(lifeexpectancy) from country where countrycode not in (select t1.countrycode from countrylanguage as t1 join countrylanguage as t2 on t1.isofficial = t2.countrycode where t2.language = 'English'
select avg(lifeexpectancy) from country where language!= 'English"; t1.name = "country" in countrylanguage = t2.country
select sum(t1.population) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language!= "English"
select count(*) from country where
select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = "Beatrix"
select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = "Beatrix"
select count(distinct t2.language) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.indepyear < 1930
select count(distinct language) from countrylanguage where indepyear < 1930
select name from country where surfacearea > (select min(surfacearea) from country where continent = 'Europe') _EX _EM
select name from country where surfacearea > (select min(surfacearea) from country where continent = 'Europe') _EX _EM
select name from country where population < (select max(population) from country where continent = 'Asia')
select name from country where population < (select max(population) from country where continent = 'Asia')
select name from country where population > (select min(population) from country where continent = 'Asia')
select name from country where population > (select min(population) from country where continent = 'Asia')
select countrycode from countrylanguage where language!= "English"
select countrycode from countrylanguage where language!= "English"
select countrycode from countrylanguage where language!= "English" _EM
select countrycode from countrylanguage where language!= "English" _EM
select countrycode from country
select countrycode from country
select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.continent
select name from city where id in (select t1.id from city as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.language = "English")
select distinct t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode where t2.continent
select distinct t1.name from city as t1 join countrylanguage as t2 on t1.id = t2.countrycode
select name, indepyear, surfacearea from country order by population asc limit 1 _EX _EM
select name, indepyear, surfacearea from country order by population limit 1 _EX _EM
select population, name, headofstate from country order by surfacearea desc limit 1 _EX _EM
select name, population, headofstate from country order by surfacearea desc limit 1 _EX _EM
select t1.name, count(*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.code having count(*) >= 3
select t1.name, count(*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language > 2
select count(*), district from city where population > (select avg(population) from city) group by district _EX _EM
select count(*), district from city where population > (select avg(population) from city) group by district _EX _EM
select governmentform, sum(population) from country group by governmentform having avg(lifeexpectancy) >= 72 _EX
select sum(population), governmentform from country where lifeexpectancy > 72 group by governmentform
select avg(lifeexpectancy), sum(population) from country where lifeexpectancy < 72 group by continent
select sum(population), avg(lifeexpectancy) from country where lifeexpectancy < 72 group by continent
select name, region from country order by region desc limit 5
select name, surfacearea from country order by surfacearea desc limit 5 _EX _EM
select name from country order by population desc limit 3 _EX _EM
select name from country order by population desc limit 3 _EX _EM
select name from country order by population asc limit 3 _EX _EM
select name from country order by population asc limit 3 _EX _EM
select count(*) from country where continent = 'Asia' _EX _EM
select count(*) from country where continent = 'Asia' _EX _EM
select name from country where continent = 'Europe' and population = 80000 _EX _EM
select name from country where continent = 'Europe' and population = 80000 _EX _EM
select sum(population), avg(surfacearea) from country where region = 'North America' and surfacearea > 3000
select sum(population), avg(surfacearea) from country where region = 'North America' and surfacearea > 3000
select name from city where population between 160000 and 900000 _EX _EM
select name from city where population between 160000 and 900000 _EX _EM
select language from countrylanguage group by language order by count(*) desc limit 1 _EX _EM
select language from countrylanguage group by language order by count(*) desc limit 1 _EX _EM
select language, percentage from countrylanguage group by language order by percentage desc limit 1
select countrycode, language, percentage from countrylanguage group by language order by percentage desc limit 1
select count(*) from countrylanguage where language = "Spain" group by countrycode
select count(*) from countrylanguage where language = "Spain" group by countrycode
select countrycode from countrylanguage where language = "Spain" group by countrycode order by sum(percentage) desc limit 1
select countrycode from countrylanguage where language = "Spain" group by countrycode having count(*) >= 2
select count(*) from conductor _EX _EM
select count(*) from conductor _EX _EM
select name from conductor order by age asc _EX _EM
select name from conductor order by age asc _EX _EM
select name from conductor where nationality!= "USA" _EX _EM
select name from conductor where nationality!= "USA" _EX _EM
select record_company from orchestra order by year_of_founded desc _EX _EM
select record_company from orchestra order by year_of_founded desc _EX _EM
select avg(attendance) from show _EX _EM
select avg(attendance) from show _EX _EM
select max(share), min(share) from performance where type!= "Live final" _EX _EM
select max(share), min(share) from performance where type!= "Live final" _EX _EM
select count(distinct nationality) from conductor _EX _EM
select count(distinct nationality) from conductor _EX _EM
select name from conductor order by year_of_work desc _EX _EM
select name from conductor order by year_of_work desc _EX _EM
select name from conductor order by year_of_work desc limit 1 _EX _EM
select name from conductor order by year_of_work desc limit 1 _EX _EM
select t2.name, t1.orchestra from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id _EX _EM
select t1.name, t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id _EX _EM
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.conductor_id having count(*) > 1 _EX _EM
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.conductor_id having count(*) > 1 _EX _EM
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.conductor_id order by count(*) desc limit 1 _EX _EM
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id group by t1.conductor_id order by count(*) desc limit 1 _EX _EM
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id where t2.year_of_founded > 2008 _EX _EM
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id where t2.year_of_founded > 2008 _EX _EM
select record_company, count(*) from orchestra group by record_company _EX _EM
select record_company, count(*) from orchestra group by record_company _EX _EM
select major_record_format from orchestra group by major_record_format order by count(*) asc _EX _EM
select major_record_format from orchestra group by major_record_format order by count(*) asc _EX _EM
select record_company from orchestra group by record_company order by count(*) desc limit 1 _EX _EM
select record_company from orchestra group by record_company order by count(*) desc limit 1 _EX _EM
select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance) _EX _EM
select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance) _EX _EM
select record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003 _EX _EM
select record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003 _EX _EM
select count(*) from orchestra where major_record_format = "CD" or major_record_format = "DVD" _EX _EM
select count(*) from orchestra where major_record_format = "CD" or major_record_format = "DVD" _EX _EM
select t1.year_of_founded from orchestra as t1 join performance as t2 on t1.orchestra_id = t2.orchestra_id group by t1.orchestra_id having count(*) > 1 _EX _EM
select t1.year_of_founded from orchestra as t1 join performance as t2 on t1.orchestra_id = t2.orchestra_id group by t1.orchestra_id having count(*) > 1 _EX _EM
select count(*) from highschooler _EX _EM
select count(*) from highschooler _EX _EM
select name, grade from highschooler _EX _EM
select name, grade from highschooler _EX _EM
select distinct grade from highschooler _EM
select distinct grade from highschooler _EM
select grade from highschooler where name = 'Kyle' _EX _EM
select grade from highschooler where name = "Kyle" _EX _EM
select name from highschooler where grade = 10 _EX _EM
select name from highschooler where grade = 10 _EX _EM
select id from highschooler where name = 'Kyle' _EX _EM
select id from highschooler where name = 'Kyle' _EX _EM
select count(*) from highschooler where grade = 9 or grade = 10 _EX _EM
select count(*) from highschooler where grade = 9 or grade = 10 _EX _EM
select count(*), grade from highschooler group by grade _EX _EM
select count(*), grade from highschooler group by grade _EX _EM
select grade from highschooler group by grade order by count(*) desc limit 1 _EX _EM
select grade from highschooler group by grade order by count(*) desc limit 1 _EX _EM
select grade from highschooler group by grade having count(*) >= 4 _EX _EM
select grade from highschooler group by grade having count(*) >= 4 _EX _EM
select student_id, count(*) from friend group by student_id _EX _EM
select count(distinct student_id) from friend
select t1.name, count(*) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.grade = "5" group by t1.id
select count(*), t1.name from highschooler as t1 join friend as t2 on t1.id = t2.friend_id group by t1.name
select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.friend_id group by t2.friend_id order by count(*) desc limit 1 _EM
select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id join likes as t3 on t2.friend_id = t3.student_id group by t2.student_id order by count(*) desc limit 1
select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.friend_id group by t2.friend_id having count(*) >= 3 _EM
select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.friend_id group by t2.friend_id having count(*) >= 3 _EM
select distinct t2.name from highschooler as t1 join friend as t4 on t1.id = t4.student_id join
select t2.friend_id from highschooler as t1 join friend as t2 on t1.id = t2.friend_id where t1.name = "Kyle"
select count(t2.friend_id) from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.name = "Kyle"
select count(t2.friend_id) from highschooler as t1 join friend as t2 on t1.id = t2.friend_id where t1.name = "Kyle"
select student_id from highschool
select id from highschooler except select t1.id from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t2.friend_id in (select student_id from friend)
select name from highschooler where id not in (select student_id from friend) _EX
select name from highschooler where id not in (select student_id from friend) _EX
select student_id from friend intersect select student_id from likes
select student_id from friend intersect select student_id from likes
select distinct t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id
select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id join likes as t3 on t2.student_id = t3.student_id
select count(*), student_id from likes group by student_id _EX _EM
select student_id, count(*) from likes group by student_id _EX _EM
select t1.name, count(*) from highschooler as t1 join likes as t2 on t1.id = t2.student_id group by t1.id _EX _EM
select count(*), t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id group by t1.name
select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id group by t2.student_id order by count(*) desc limit 1 _EX _EM
select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id group by t2.student_id order by count(*) desc limit 1 _EX _EM
select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id group by t2.student_id having count(*) >= 2 _EX _EM
select t1.name from highschooler as t1 join likes as t2 on t1.id = t2.student_id group by t2.student_id having count(*) >= 2 _EX _EM
select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.student_id where t1.grade > 5 group by t2.student_id having count(*) >= 2 _EX _EM
select t1.name from highschooler as t1 join friend as t2 on t1.id = t2.friend_id where t1.grade > 5 group by t2.friend_id having count(*) >= 2 _EM
select count(*) from likes as t1 join highschooler as t2 on t1.student_id = t2.id where t2.name = "Kyle" _EX _EM
select count(distinct t2.liked_id) from highschooler as t1 join likes as t2 on t1.id = t2.student_id where t1.name = "Kyle"
select avg(grade) from highschooler where id in (select student_id from friend) _EX
select avg(grade) from highschooler where id in (select student_id from friend) _EX
select min(grade) from highschooler where id not in (select student_id from friend) _EX
select min(grade) from highschooler where id not in (select student_id from friend) _EX
select state from owners intersect select state from professionals _EX _EM
select state from owners intersect select state from professionals _EX _EM
select avg(age) from dogs where dog_id in ( select dog_id from treatments ) _EX _EM
select avg(age) from dogs where dog_id in ( select dog_id from treatments ) _EX _EM
select t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) > 2
select t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) > 2
select name from dogs except select t1.name from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t2.cost_of_treatment > 1000
select name from dogs except select t1.name from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t2.cost_of_treatment > 1000
select first_name from professionals union select first_name from owners _EX
select first_name from professionals union select first_name from owners _EX
select professional_id, role_code, email_address from professionals except select t1.professional_id, t1.role_code, t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id _EX _EM
select professional_id, role_code, email_address from professionals except select t1.professional_id, t1.role_code, t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id _EX _EM
select t1.owner_id, t1.first_name, t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by count(*) desc limit 1 _EX _EM
select t1.owner_id, t1.first_name, t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by count(*) desc limit 1 _EX _EM
select t1.professional_id, t1.role_code, t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2 _EX _EM
select t1.professional_id, t1.role_code, t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2 _EX _EM
select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code = t2.breed_code group by t1.breed_code order by count(*) desc limit 1 _EX
select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code = t2.breed_code group by t1.breed_code order by count(*) desc limit 1 _EX
select t1.owner_id, t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by count(*) desc limit 1 _EX
select t1.owner_id, t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id join treatments as t3 on t3.dog_id = t2.dog_id group by t1.owner_id order by sum(t3.cost_of_treatment) desc limit 1
select t1.treatment_type_description from treatment_types as t1 join treatments as t2 on t1.treatment_type_code = t2.treatment_type_code group by t1.treatment_type_code order by sum(t2.cost_of_treatment) asc limit 1 _EX _EM
select t1.treatment_type_description from treatment_types as t1 join treatments as t2 on t1.treatment_type_code = t2.treatment_type_code group by t1.treatment_type_code order by sum(t2.cost_of_treatment) limit 1 _EX _EM
select t1.owner_id, t1.zip_code from owners as t1 join dogs as t2 on t1.owner_
select t1.owner_id, t1.zip_code from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by sum(t2.cost
select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2 _EX _EM
select t1.professional_id, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2 _EX _EM
select t1.first_name, t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id where t2.cost_of_treatment < (select avg(cost_of_treatment) from treatments) _EM
select t1.first_name, t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id where t2.cost_of_treatment < (select avg(cost_of_treatment) from treatments) _EM
select t1.date_of_treatment, t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id _EX _EM
select t1.date_of_treatment, t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id _EX _EM
select t1.cost_of_treatment, t3.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code = t2.treatment_type_code join treatment_types as t3 on t1.treatment_type_code = t3.treatment_type_code _EX
select t1.cost_of_treatment, t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code = t2.treatment_type_code _EX _EM
select t1.first_name, t1.last_name, t2.size_code from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t2.gender = "male" and t2.size_code = "female"
select t1.first_name, t1.last_name, t2.size_code from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id _EX _EM
select t1.first_name, t2.name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id _EX _EM
select t1.first_name, t2.name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id _EX _EM
select t1.name, t2.date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t1.breed_code = (select breed_code from breeds group by breed_code order by count(*) desc limit 1)
select t1.name, t2.date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id join breeds as t3 on t1.breed_code = t3.breed_code order by t3.breed_name desc limit 1
select t1.first_name, t1.name from dogs as t1
select t1.first_name, t2.name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t1.state = "Virginia" _EX _EM
select t1.date_arrived, t1.date_departed from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id _EM
select t1.date_arrived, t1.date_departed from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id _EM
select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id order by t2.age asc limit 1
select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id order by t2.age limit 1
select email_address from professionals where state = "Hawaii" or state = "Wisconsin" _EX _EM
select email_address from professionals where state = "Hawaii" or state = "Wisconsin" _EX _EM
select date_arrived, date_departed from dogs _EX _EM
select date_arrived, date_departed from dogs _EX _EM
select count(distinct dog_id) from treatments _EX _EM
select count(distinct dog_id) from treatments _EX _EM
select count(distinct professional_id) from treatments _EX _EM
select count(distinct professional_id) from treatments _EX _EM
select role_code, street, city, state from professionals where city like "%west%" _EX _EM
select role_code, street, city, state from professionals where city like "%west%" _EX _EM
select first_name, last_name, email_address from owners where state like "%north%" _EX _EM
select first_name, last_name, email_address from owners where state like "%north%" _EX _EM
select count(*) from dogs where age < (select avg(age) from dogs) _EX _EM
select count(*) from dogs where age < (select avg(age) from dogs) _EX _EM
select cost_of_treatment from treatments order by date_of_treatment desc limit 1 _EX _EM
select cost_of_treatment from treatments order by date_of_treatment desc limit 1 _EX _EM
select count(*) from dogs where dog_id not in ( select dog_id from treatments ) _EX _EM
select count(*) from dogs where dog_id not in ( select dog_id from treatments ) _EX _EM
select count(*) from owners where owner_id not in (select owner_id from dogs) _EX _EM
select count(*) from owners where owner_id not in (select owner_id from dogs) _EX _EM
select count(*) from professionals where professional_id not in ( select professional_id from treatments ) _EX _EM
select count(*) from professionals where professional_id not in ( select professional_id from treatments ) _EX _EM
select name, age, weight from dogs where abandoned_yn = 1 and 0 = 0
select name, age, weight from dogs where abandoned_yn = 1 _EX _EM
select avg(age) from dogs _EX _EM
select avg(age) from dogs _EX _EM
select age from dogs order by age desc limit 1 _EX
select age from dogs order by age desc limit 1 _EX
select charge_type, charge_amount from charges _EX _EM
select charge_type, charge_amount from charges group by charge_type _EX
select charge_type from charges order by charge_amount desc limit 1
select charge_amount from charges order by charge_type desc limit 1 _EX
select email_address, cell_number, home_phone from professionals _EX _EM
select email_address, cell_number, home_phone from professionals _EX _EM
select distinct breed_code, size_code from dogs _EX _EM
select distinct breed_code, size_code from dogs _EX _EM
select t1.first_name, t3.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id join treatment_types as t3 on t2.treatment_type_code = t3.treatment_type_code _EM
select t1.first_name, t3.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id join treatment_types as t3 on t2.treatment_type_code = t3.treatment_type_code _EM
select count(*) from singer _EX _EM
select count(*) from singer _EX _EM
select name from singer order by net_worth_millions asc _EX _EM
select name from singer order by net_worth_millions asc _EX _EM
select birth_year, citizenship from singer _EX _EM
select birth_year, citizenship from singer _EX _EM
select name from singer where citizenship!= "France" _EX _EM
select name from singer where citizenship!= "France" _EX _EM
select name from singer where birth_year = 1948 or birth_year = 1949 _EX _EM
select name from singer where birth_year = 1948 or birth_year = 1949 _EX _EM
select name from singer order by net_worth_millions desc limit 1 _EX _EM
select name from singer order by net_worth_millions desc limit 1 _EX _EM
select citizenship, count(*) from singer group by citizenship _EX _EM
select citizenship, count(*) from singer group by citizenship _EX _EM
select citizenship from singer group by citizenship order by count(*) desc limit 1 _EX _EM
select citizenship from singer group by citizenship order by count(*) desc limit 1 _EX _EM
select citizenship, max(net_worth_millions) from singer group by citizenship _EX _EM
select max(net_worth_millions), citizenship from singer group by citizenship _EX _EM
select t3.title, t2.name from song as t1 join singer as t2 on t1.song_id = t3.song_id join song as t3 on t1.song_id = t3.song_id
select t2.title, t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id _EX _EM
select distinct t2.name from song as t1 join singer as t2 on t1.singer_id = t2.singer_id where t1.sales > 300000 _EX _EM
select distinct t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id where t2.sales > 300000 _EX _EM
select t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id group by t2.singer_id having count(*) > 1
select t1.name from singer as t1 join song as t2 on t1.singer_id = t2.singer_id group by t2.singer_id having count(*) > 1
select t1.name, sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id = t2.singer_id group by t2.singer_id
select t2.name, sum(t1.sales) from song as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.name _EX _EM
select name from singer where singer_id not in (select singer_id from song) _EX _EM
select name from singer where singer_id not in (select singer_id from song) _EX _EM
select citizenship from singer where birth_year < 1945 intersect select citizenship from singer where birth_year > 1955 _EX _EM
select citizenship from singer where birth_year < 1945 intersect select citizenship from singer where birth_year > 1955 _EX _EM
select count(*) from other_available_features _EX _EM
select t1.feature_type_name from ref_feature_types as t1 join other_available_features as t2 on t1.feature_type_code = t2.feature_type_code where t2.feature_name = "AirCon" _EX _EM
select t1.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code
select property_name from properties where property_type_code = "House" or room_count > 1
select issue_id from issue where type = "Bit" _EM
select issue_id from issue where status = "Closed" union select issue_id from issue where status = "Resolved" or status = "Patch Available"
select t1.issue_id, t1.type, t1.description from issue as t1 join issue_component as t2 on t1.issue_id = t2.issue_id where t2.component = "impl" _EX _EM
select issue_id from issue where updated_date between '2017-03-23' and '2017-03-23' _EM
select * from issue where issue_id = "PIG-3599" _EX _EM
select issue_id from issue where assignee = "Daniel Ward" and status = "Open"
select issue_id from issue where status = "In Progress"
select issue_id from issue where assignee = "John Stark" and type = "Bit"
select issue_id from issue where priority = "Blocker" or priority = "Critical"
select issue_id from issue where updated_date > "2017-03-28"
select issue_id from issue where assignee = "Daniel Ward"
select * from issue_attachment
select issue_id, summary from issue where type = "Bit" _EM
select issue_id, description from issue where type = "Bit" _EM
select * from issue_component where component = "grant" intersect select * from issue_component where component = "parser"
select status from issue where issue_id = "PIG-3599" _EX _EM
select issue_id, priority from issue where type = 'Bit' _EM
select issue_id, status, resolution, summary, priority from issue where type = 'Bit' and priority = 'Major'
select issue_id, type, priority from issue where status = "Open" order by type, priority _EX _EM
select t1.field_type, t1.username from issue_changelog as t1 join issue_fix_version as t2 on t1.issue_id = t2.issue_id where t2.fix_version = "0.12.1"
select issue_id, type, summary, description from issue where status = "Open" and priority = "Major" _EX _EM
select distinct assignee from issue where type = "Bug" _EX _EM
select t1.name, count(*) from
select commit_hash, message from change_set _EX _EM
select assignee from issue where issue_id = "PIG-3599" _EX _EM
select count(*) from issue where type = "Improvement" _EX _EM
select type from issue group by type order by count(*) desc limit 1 _EX _EM
select count(*) from issue where priority = "Blocker" or priority = "Critical" _EX _EM
select t1.file_path, count(*) from code_change as t1 join change_set as t2 on t1.commit_hash = t2.commit_hash group by t1.file_path order by count(*) desc limit 5
select assignee from issue group by assignee having count(*) = 1 _EX
select assignee, count(*) from issue where status = "Open" group by assignee order by count(*) desc limit 1
select assignee, count(*) from issue where status = "Open" group by assignee
select status, count(*) from issue group by status
select resolution, count(*) from issue group by resolution _EX _EM
select source_issue_id, target_issue_id from issue_link where name = 'Duplicate' _EX _EM
select source_issue_id, target_issue_id from issue_link where name = 'Blocker' _EX _EM
select count(*) from issue where status = "Open" _EX _EM
select issue_id from issue where priority = "Blocker" or priority = "Critical"
select assignee, count(*) from issue where status = "Resolved" group by assignee _EX _EM
select display_name, message from issue_comment where issue_id = "PIG-3599" _EX
select t1.assignee_username from issue_comment as t2 join code_change as t3 on t1.issue_id = t3.issue_id
select count(distinct assignee) from issue_component as t1 join issue as t2 on t1.issue_id = t2.issue_id where t1.component = "impl" _EM
select distinct assignee from issue_component as t1 join issue_changelog as t2 on t1.issue_id = t2.issue_id join issue_component as t3 on t3.issue_id = t2.issue_id
select t1.reporter, t2.issue_id from issue as t1 join issue as t2 on t1.issue_id = t2.issue_id where t1.reporter = "null" order by t1.reporter asc
select distinct field from issue_changelog as t1 join issue_fix_version as t2 on t1.issue_id = t2.issue_id where t2.fix_version = "0.12.1" _EM
select issue_id, assignee from issue where resolved_date between "2014-09-08" and "2014-09-12" _EX _EM
select t1.file_path from code_change as t1 join issue_fix_version as t2 on t1.commit_hash = t2.fix_version where t2.fix_version = "0.12.1"
select * from issue where created_date < "2014-09-12" _EX _EM
select issue_id from issue where created_date = "2017-03-28"
select issue_id from issue where resolved_date = "2013-10-23" _EX _EM
select count(*), assignee from issue where resolved_date between '2015-03-01' and '2015-03-31' group by assignee having count(*) >= 3
select count(*) from issue where resolved_date < "2013-10-27" _EX _EM
select * from issue where created_date > "2017-05-31" _EX _EM
select issue_id from issue where resolved_date
select issue_id from issue where created_date between '2017-01-01' and '2017-03-31' _EX _EM
select issue_id, type, priority from issue where status = 'Open' and created_date between '2013-11-16' and '2013-11-28' order by type, priority _EX _EM
select issue_id, status from issue where type = "Bit" _EM
select issue_id, resolution from issue where type = 'Bit' _EM
select type from issue where issue_id = "PIG-3599" _EX _EM
select resolved_date from issue where issue_id = "PIG-3599" _EX _EM
select * from issue_attachment
select distinct t1.priority from issue as t1 join issue_link as t2 on t1.issue_id = t2.issue_id
select distinct status from issue_changelog as t1 join jira_repository as t2 on t1.source_
select count(distinct issue_id) from issue
select commit_hash from change_set _EX _EM
select distinct t2.author_email from change_set as t1 join
select distinct component from issue_component _EX _EM
select issue_fix_version
select fix_version from issue_fix_version group by fix_version order by count(*) desc limit 1 _EX _EM
select status from issue order by created_date_zoned desc limit 1 _EX
select fix_version from issue_fix_version where issue_id = "PIG-3599" _EX _EM
select created_date, count(*) from issue group by created_date _EX _EM
select updated_date, count(*) from issue group by updated_date _EX _EM
select resolved_date, count(*) from issue group by resolved_date _EX _EM
select committed_date, count(*) from change_set group by committed_date _EX _EM
select resolved_date, issue_id from issue where assignee = "Daniel Ward" order by resolved_date desc
select count(*) from issue where resolved_date between "2014-10-01" and "2014-10-31" and assignee = "John Stark" _EX _EM
select count(*) from issue where created_date between '2015-01-01' and '2015-04-30' _EX _EM
select created_date, count(*) from issue group by created_date_zoned order by count(*) desc limit 1
select resolved_date, count(*) from issue group by resolved_date order by count(*) desc limit 1
select count(*) from issue where issue_id in ( select issue_id from issue_changelog where from_string = "Pig")
select count(distinct type) from issue _EX _EM
select type, count(*) from issue group by type _EX _EM
select count(distinct priority) from issue _EX _EM
select priority, count(*) from issue group by priority _EX _EM
select count(distinct status) from issue _EX _EM
select resolution, count(*) from issue group by resolution
select count(distinct assignee) from issue _EX _EM
select assignee, count(*) from issue group by assignee _EX _EM
select count(distinct assignee_username) from issue _EX _EM
select assignee_username, count(*) from issue group by assignee_username _EX _EM
select count(distinct reporter_username) from issue
select username, count(*) from issue_comment group by username _EX _EM
select t1.reporter_username, count(*) from issue as t1 join git_repository as t2 on t1.issue_id = t2.issue_id
select count(*), t1.reporter_username from issue as t1 join git_repository as t2 on t1.issue_id = t2.git_repository_id group by t1.reporter_username
select reporter_username, count(*) from issue group by reporter_username _EX _EM
select count(*) from change_set _EX _EM
select count(distinct author) from change_set _EX _EM
select t1.display_name, count(*) from issue_comment as t1 join issue_changelog as t2 on t1.issue_id = t2.issue_id where t2.field = "Comment" group by t1.display_name
select distinct username from issue_comment _EX _EM
select count(distinct component) from issue_component where component = "Pig"
select t1.component, count(*) from issue_component as t1 join issue_comment as t2 on t1.issue_id = t2.issue_id group by t1.component
select count(distinct name) from issue_link _EX _EM
select name, count(*) from git_repository group by name
select count(*) from issue where type = "Bit" _EM
select distinct assignee from issue _EX _EM
select distinct assignee_username from issue _EX _EM
select distinct reporter from issue _EX _EM
select distinct reporter_username from issue _EX _EM
select distinct author from change_set _EX _EM
select display_name, count(*) from issue_comment where issue_id = "PIG-3592"
select t1.issue_id, t1.created_date, t1.resolved_date, t2.commit_hash from issue as t1 join code_change as t2 on t1.issue_id = t2.issue_
select * from issue_link where source_issue_id in (select target_issue_id from change_set
select count(*) from issue where issue_id not in (select issue_id from issue_link
select count(*) from issue_link where source_issue_id = t1.issue_id and target_issue_id = t2.target_issue_id
select count(*) from issue_link where issue_id in (select issue_id from change_set
select username, count(distinct issue_id) from issue_comment group by username _EX _EM
select issue_id, count(distinct username) from issue_comment group by issue_id _EX _EM
select issue_id, count(*) from issue_comment group by issue_id
select issue_id, summary, description from issue _EX _EM
select t1.commit_hash from code_change as t1 join issue_comment as t2 on t1.commit_hash = t2.f
select count(*), type from issue group by type
select count(*) from issue_attachment where issue_id = "PIG-3599"
select min(*) from code_change as t1 join issue_link as t2 on t1.commit_hash = t2.source_issue_id join issue as t3 on t2.target_issue_id = t3.issue_id where t3.type = 'Bug'
select count(*) from issue_link where source_issue_id = (select t1.source_issue_id from issue_link as t1 join
select source_issue_id, target_issue_id from issue_link where type = 'Bitterness'
select distinct t1.name from issue_link as t1 join issue_component as t2 on t1.source_issue_id = t2.source_issue_id
select t1.type, count(*) from issue as t1 join issue_link as t2 on t1.issue_id = t2.source_issue_id where t2.name = "Clothes" group by t1.issue_id
select t1.type from issue as t1 join issue_link as t2 on t1.issue_id = t2.source_issue_id where t2.name = "Clothes"
select distinct type from issue _EX _EM
select issue_id from issue where type = "Bit"
select issue_id from issue where status!= "In Progress"
select count(*) from issue_link as t1 join issue as t2 on t1.source_issue_id = t2.issue_id where t2.type = 'Improvement' group by t1.source_issue_id order by count(*) desc limit 1
select issue_id from issue where issue_id not in ( select issue_id from issue_fix_version )
select status from issue where status = "Closed" union select status from issue where status = "Resolved"
select t1.issue_id, t1.type, t1.description from issue as t1 join issue_component as t2 on t1.issue_id = t2.issue_id where t2.component = "impl" _EX _EM
select issue_id from issue where updated_date between '2017-03-23' and '2017-03-23' _EM
select * from issue where issue_id = "PIG-3599" _EX _EM
select issue_id from issue_attachment where assigne
select issue_id, status from issue where status = 'Active'
select issue_id from issue_comment where display_name = "John Stark"
select issue_id from issue where priority = "Blocking" or priority = "Critical"
select issue_id from issue where updated_date > "2017-03-28"
select distinct t1.issue_id from issue as t1 join issue_comment as t2 on t1.issue_id = t2.issue_id where t1.assignee = "Daniel Ward"
select issue_id from issue_attachment
select issue_id, summary from issue where type = "Bit" _EM
select issue_id, description from issue where type = "Bit" _EM
select issue_id from issue_component where component = "grant" intersect select issue_id from issue_component where component = "parser"
select status from issue where issue_id = "PIG-3599" _EX _EM
select issue_id, priority from issue where type = "Bit" _EM
select issue_id, status, resolution, summary, description from issue where type = 'Major'
select issue_id, status, resolution, summary, description from issue where type = 'Major'
select t1.
select issue_id, type, summary, description from issue where status = "Open" and priority = "Major" _EX _EM
select distinct assignee_username from issue where type = "Bit"
select count(*), author from change_set group by author _EX _EM
select commit_hash, message from change_set _EX _EM
select assignee from issue where issue_id = "PIG-3599" _EX _EM
select count(*) from issue where type = 'Increment' _EM
select type from issue group by type order by count(*) desc limit 1 _EX _EM
select count(*) from issue where priority = "Blocker" or priority = "Critical" _EX _EM
select file_path, count(*) from code_change group by file_path order by count(*) desc limit 5
select assignee_username from issue group by assignee_username having count(*) = 1
select assignee, count(*) from issue group by assignee order by count(*) desc limit 1
select assignee, count(*) from issue where status = "Open" group by assignee
select type, count(*) from issue group by type
select count(*), resolution from issue group by resolution _EX _EM
select distinct t1.name from issue_link as t1 join issue_component as t2 on t1.source_issue_id = t2.target_issue_id
select issue_
select count(*) from issue where status!= "Resolved"
select issue_id, priority from issue where priority = "Critical" union select issue_id, priority from issue where priority = "Blocking"
select assignee, count(*) from issue group by assignee
select t2.assignee_username, t3.message from issue as t1 join issue_comment as t2
select assignee from issue where issue_id = "PIG-3592"
select count(distinct assignee) from issue_component as t1 join issue as t2 on t1.issue_id = t2.issue_id where t1.component = "impl" _EM
select distinct t1.assignee_username from issue as t1 join issue_component as t2 on t1.issue_id = t2.issue_id where t2.component = "imp"
select t1.username, t2.issue_id from issue_comment as t1 join issue as t2 on t1.issue_id = t2.issue_id join jira_repository as t3 on t2.source_issue_
select count(*) from issue_fix_version where fix_version = "0.12.1"
select issue_id, assignee from issue where resolved_date between "2014-09-08" and "2014-09-12" _EX _EM
select t1.file_path from issue_change
select issue_id from issue_comment where created_date < "2014-09-12"
select issue_id from issue_comment where created_date = "2017-03-28"
select issue_id from issue where resolved_date = "2013-10-23" _EX _EM
select t1.reporter_username from issue as t1 join issue_comment as t2 on t1.issue_id = t2.issue_id where t1.created_date between '2015-03-01' and '2015-03-31' group by t1.reporter_username having count(*) >= 3
select count(*) from issue where resolved_date < "2013-10-27" _EX _EM
select issue_id from issue_comment where created_date > "2017-05-31"
select issue_id from issue where resolved_date between 2017-10-01
select issue_id from issue_comment where created_date between '2017-01-01' and '2017-03-31'
select issue_id, type, priority from issue where status = 'Open' and created_date between '2013-11-16' and '2013-11-28' order by type, priority _EX _EM
select t1.issue_id, t1.status from issue as t1 join issue_changelog as t2 on t1.issue_id = t2.issue_id where t1.type = "Bit" and t2.from_string = "Pig"
select issue_id, resolution from issue where type = "Bit" _EM
select type from issue where issue_id = "PIG-3599" _EX _EM
select resolved_date from issue where issue_id = "PIG-3599" _EX _EM
select * from issue _EX _EM
select priority from issue group by priority order by count(*) desc limit 1
select status from issue group by status having count(*) >= 1
select distinct resolution from issue _EX _EM
select commit_hash from change_set where git_repository_
select t2.author from change_set as t1 join issue_comment as t3 on t1.commit_hash = t3.
select component from issue_component where component = "Pig"
select count(*), t1.fix_version from issue_fix_version as t1 join issue as t2 on t1.issue_id = t2.issue_id where t2.status = "Resolved" group by t1.fix_version
select fix_version from issue_fix_version group by fix_version order by count(*) desc limit 1 _EX _EM
select status from issue order by created_date_zoned desc limit 1 _EX
select fix_version from issue_fix_version where issue_id = "PIG-3599" _EX _EM
select issue_id, created_date_zoned from issue group by created_date_zoned
select updated_date, created_date_zoned from issue group by created_date_zoned
select resolved_date, count(*) from issue where resolution!= "Yes" group by resolved_date
select count(*), committed_date from change_set group by committed_date _EX _EM
select resolved_date, issue_id from issue where assignee = "Daniel Ward" order by resolved_date desc
select count(*) from issue as t1 join issue_comment as t2 on t1.issue_id = t2.issue_id where t2.display_name = "John Stark" and t1.resolved_date = "October 2014"
select count(*) from issue_comment where created_date_zoned like "2015%"
select created_date from issue_comment group by created_date order by count(*) desc limit 1
select resolved_date from issue group by resolved_date order by count(*) desc limit 1 _EX
select count(*) from issue _EX _EM
select count(distinct type) from issue _EX _EM
select type, count(*) from issue group by type _EX _EM
select count(distinct priority) from issue _EX _EM
select count(*), priority from issue group by priority _EX _EM
select count(distinct status) from issue _EX _EM
select distinct resolution from issue_changelog as t1 join jira_repository as t2 on t1.source_issue_
select count(distinct assignee_username) from issue
select count(*), assignee from issue as t1 join jira_repository as t2 on t1.
select count(distinct assignee_username) from issue _EX _EM
select count(*), assignee_username from issue group by assignee_username _EX _EM
select count(*), t1.reporter_username from issue as t1 join jira_repository as t2 on t1.issue_id = t2.
select count(*), username from issue_comment group by username _EX _EM
select count(*), t1.reporter_username from issue as t1 join issue_changelog as t2 on t1.issue_id = t2.issue_id group by t1.reporter_username
select count(*) from issue as t1 join issue_changelog as t2 on t1.issue_id = t2.issue_id where t2.field = "reporter"
select t2.name, count(*) from issue as t1 join
select count(*) from change_set _EX _EM
select count(*) from change_set
select count(*), t1.username from issue_comment as t1 join change_set as t2 on t1.issue_id = t2.issue_id
select distinct username from issue_comment _EX _EM
select count(*) from issue_component where component = "Pig"
select count(distinct component) from issue_component
select count(distinct name) from issue_link _EX _EM
select count(*) from issue_link group by count(*)
select count(*) from issue where type = "Bit" _EM
select distinct assignee_username from issue
select distinct assignee_username from issue _EX _EM
select distinct reporter from issue as t1 join issue_link as t2 on t1.issue_id = t2.source_issue_id where t2.is_containment = 1
select distinct t1.reporter_username from issue as t1 join issue_comment as t2 on t1.issue_id = t2.issue_id where t1.reporter_username = "null"
select distinct author from change_set _EX _EM
select count(*) from issue_comment where issue_id = "PIG-3592" group by username
select t1.issue_id, t1.created_date, t1.resolved_date, t2.commit_hash, t2.committed_date from issue as t1 join
select issue_id from issue_link
select count(*) from change_set where commit_hash not in ( select t1.commit_hash from change_set as t1 join issue_link as t2 on t1.git_repository_id = t2.source_issue_id )
select count(*) from change_set
select count(*) from issue_link group by issue_id
select username, count(*) from issue_comment group by username
select count(distinct username) from issue_comment
select issue_id, count(*) from issue_comment group by issue_id
select issue_id, summary, description from issue _EX _EM
select t1.commit_hash from code_change as t1 join issue_comment as t2 on t1.commit_hash = t2.f
select count(*), t1.type from issue as t1 join issue_component as t2 on t1.issue_id = t2.issue_id where t1.type = "Bit" group by t1.type
select count(distinct t2.file_path) from issue_link as t1 join code_change as t2 on t1.source_issue_id = t2.source_issue_id
select min(*) from issue_attachment as t1 join issue as t2 on t1.issue_id = t2.issue_id where t2.type = "Bit"
select count(*) from issue_link where source_issue_id in ( select t1.source_issue_id from issue_link as t1 join issue as t2 on t1.target_issue_id = t2.issue_id where t2.type = 'Bit' intersect select t1.source_issue_id from issue_link as t1 join issue as t2 on t1.target_issue_id = t2.issue_id where t2.type = 'Infrastructure' )
select issue_id from issue where type = "Bitter" intersect select issue_id from issue_link
select distinct name from issue_link _EX _EM
select t1.type, count(*) from issue as t1 join issue_link as t2 on t1.issue_id = t2.target_issue_id where t2.name = "Cloners" group by t1.type
select distinct t1.type from issue as t1 join issue_link as t2 on t1.issue_id = t2.source_issue_id where t2.name = "Cloners"
select type from issue group by type having count(*) >= 1
select * from issue as t1 join jira_repository as t2 on t1.source_issue_
select issue_id from issue where status!= "In Progress"
select count(*) from issue_attachment as t1 join code_change as t2 on t1.issue_id = t2.issue_id